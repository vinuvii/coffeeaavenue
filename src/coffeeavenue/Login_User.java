/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffeeavenue;

import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Reader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.Locale;
import javax.imageio.ImageIO;

/**
 *
 * @author DELL
 */
public class Login_User extends javax.swing.JFrame {

    /**
     * Creates new form Login_User
     */
    public Login_User() {
        initComponents();
        date();
        time();
        
    }
    public Login_User(Locale lcl) {
        Locale.setDefault(lcl);
        initComponents();
        date();
        time();
        
    }

    public void clear() {
        jTextField1.setText("");
        jPasswordField1.setText("");
        jComboBox1.setSelectedIndex(0);
    }

    public void date() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDateTime now = LocalDateTime.now();
        jLabel4.setText(dtf.format(now));
    }
    Timer t;
    SimpleDateFormat st;

    public void time() {

        t = new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date dt = new Date();
                st = new SimpleDateFormat("hh:mm:ss a");
                String tt = st.format(dt);
                jLabel6.setText(tt);

            }
        });
        t.start();

    }

    public void floginmessage() {
        String userid = jTextField1.getText();
        String password = String.valueOf(jPasswordField1.getPassword());
        try {

            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
            Statement sta = con.createStatement();

            int c = sta.executeUpdate("INSERT INTO LOGS_"
                    + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                    + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','" + jTextField1.getText() + "','" + jComboBox1.getSelectedItem().toString()+ "','Failed Logging In')");

            sta.close();
            con.close();
        } catch (Exception e) {
            System.err.println("Exception: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(216, 100, 17));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LogInIcon.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(206, 179, 122));

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(216, 100, 16));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("coffeeavenue/Bundle"); // NOI18N
        jLabel3.setText(bundle.getString("Login_User.jLabel3.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(216, 100, 16));
        jLabel1.setText(bundle.getString("Login_User.jLabel1.text")); // NOI18N

        jLabel7.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(216, 100, 16));
        jLabel7.setText(bundle.getString("Login_User.jLabel7.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(216, 100, 16));
        jLabel5.setText(bundle.getString("Login_User.jLabel5.text")); // NOI18N

        jButton5.setBackground(new java.awt.Color(216, 100, 17));
        jButton5.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(153, 0, 0));
        jButton5.setText(bundle.getString("Login_User.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPasswordField1.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField1.setDoubleBuffered(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(216, 100, 16));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer", "Admin", "Employee" }));

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(216, 100, 16));
        jLabel6.setText(bundle.getString("Login_User.jLabel6.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(216, 100, 16));
        jLabel4.setText(bundle.getString("Login_User.jLabel4.text")); // NOI18N

        jButton6.setBackground(new java.awt.Color(216, 100, 17));
        jButton6.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 0, 0));
        jButton6.setText(bundle.getString("Login_User.jButton6.text")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(216, 100, 17));
        jButton7.setFont(new java.awt.Font("Bell MT", 0, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(153, 0, 0));
        jButton7.setText(bundle.getString("Login_User.jButton7.text")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(136, 136, 136))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      String combo = jComboBox1.getSelectedItem().toString();
        
        try {
            if (jTextField1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Missing Information");
                clear();
            } else {
                if (jComboBox1.getSelectedItem().toString().equals("Admin")) {
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.ADMIN_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    String password = String.valueOf(jPasswordField1.getPassword());
                    while (rs.next()) 
                    {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                        String pw = rs.getString(5);
                        boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                            if (password.equals(pw)) {
                                flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Admin','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }
                                     new AdminGUI(username,uid,combo).setVisible(true);
                                    error = "Welcome " + username;
                                    clear();

                                }

                            }else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Admin','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }
                        }
                        else {

                            error = "Invalid UserID or Password";
                            clear();

                        }
                        if (flag) {
                            break;
                        }

                    }

                    JOptionPane.showMessageDialog(rootPane, error);
                } else if (jComboBox1.getSelectedItem().toString().equals("Employee")) {
                    
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.EMPLOYEE_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    String password = String.valueOf(jPasswordField1.getPassword());
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                        String pw = rs.getString(5);
                        boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                            if (password.equals(pw)) {
                                flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Employee','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }

                                     new Order(username,uid,combo).setVisible(true);
                                    error = "Welcome " + username;
                                    clear();
                                }
                            } else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Employee','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }

                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);

                }else if (jComboBox1.getSelectedItem().toString().equals("Customer")) {
                   
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.Customer_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                        boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                            flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Customer','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }
                                    
                                    new CustomerOrder(username,Integer.parseInt(uid),combo).setVisible(true);
                                    error = "Welcome " + username;
                                    clear();
                                    }
                            else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Customer','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }

                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);

                }else if (jComboBox1.getSelectedItem().toString().equals("Kitchen Employee")) {
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.KITCHENEMPLOYEE_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    String password = String.valueOf(jPasswordField1.getPassword());
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                        String pw = rs.getString(5);
                        boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                            if (password.equals(pw)) {
                                flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Kitchen Employee','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }

                                    AdminGUI m = new AdminGUI();
                                    m.setTitle("AdminGUI");
                                    m.setVisible(true);
                                    error = "Welcome " + username;
                                    clear();
                                    }
                            } else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Kitchen Employee','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();
                            }
                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         String combo = jComboBox1.getSelectedItem().toString();

        int r = jFileChooser1.showDialog(this,"Select The Barcode");
        try{
            Toolkit tk = Toolkit.getDefaultToolkit();
            Image img = tk.getImage(jFileChooser1.getSelectedFile().getAbsolutePath());
            InputStream barInputStream = new FileInputStream(jFileChooser1.getSelectedFile().getAbsolutePath());
            BufferedImage barBufferedImage = ImageIO.read(barInputStream);
            LuminanceSource source = new BufferedImageLuminanceSource(barBufferedImage);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
            Reader reader = new MultiFormatReader();
            Result result = reader.decode(bitmap);
            jTextField1.setText(result.getText());
            
            if (jTextField1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Missing Information");
                clear();
            } else {
                if (jComboBox1.getSelectedItem().toString().equals("Admin")) {
                   
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.Admin_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                         boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                             flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Admin','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }

                                     
                                    String usernamee = username;
                                    String uidd = uid;
                                    String comboo = combo;
                                     new AdminGUI(usernamee,uidd,comboo).setVisible(true);
                
                                    error = "Welcome " + username;
                                    clear();                           clear();
                                }
                         
                            else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Admin','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }

                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);
                } else if (jComboBox1.getSelectedItem().toString().equals("Employee")) {
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.Employee_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                         boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                            flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Employee','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }

                                     new Order(username,uid,combo).setVisible(true);
                                    error = "Welcome " + username;
                                    clear();
                                    }
                            else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Employee','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }

                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);

                }else if (jComboBox1.getSelectedItem().toString().equals("Customer")){
                  
                    Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/CoffeeAvenue", "Coffee", "Avenue");
                    Statement st = con.createStatement();
                    String qry = "SELECT * FROM COFFEE.Customer_DETAILS ";
                    ResultSet rs = st.executeQuery(qry);
                    String error = "";
                    String userid = jTextField1.getText();
                    while (rs.next()) {
                        String uid = rs.getString(1);
                        String username = rs.getString(2);
                        boolean flag = false;

                        if (userid.equalsIgnoreCase(uid)) {
                                flag = true;
                                this.setVisible(false);

                                if(flag){
                                    try {
                                        Statement sta = con.createStatement();
                                        int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                            + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                            + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Customer','Logged In')");

                                        sta.close();
                                        con.close();
                                    } catch (Exception e) {
                                        System.err.println("Exception: " + e.getMessage());
                                    }

                                    new CustomerOrder(username,Integer.parseInt(uid),combo).setVisible(true);;
                                    error = "Welcome " + username;
                                    clear();                              clear();
                                }
                            else{
                                try {
                                    Statement sta = con.createStatement();

                                    int c = sta.executeUpdate("INSERT INTO LOGINLOG"
                                        + " (DATE, TIME,USER_,USERROLE,ACTIVITY)"
                                        + " VALUES ('" + jLabel4.getText() + "','" + jLabel6.getText() + "','ID:"+uid+" Username:"+username+"','Customer','Failed Logging In')");

                                    sta.close();
                                    con.close();
                                } catch (Exception e) {
                                    System.err.println("Exception: " + e.getMessage());
                                }
                                clear();

                            }

                        }
                        else {
                            error = "Invalid UserID or Password";
                            clear();
                        }
                        if (flag) {
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, error);

                }
            }

        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        clear();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        if(jComboBox1.getSelectedItem().toString().equals("Customer")){
             JOptionPane.showMessageDialog(rootPane, "Password Not Required");
             jPasswordField1.setText("");
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
